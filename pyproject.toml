[project]
name = "llm-status-monitor"
version = "0.2.0"
description = "Monitor status pages for Claude and ChatGPT with intelligent incident filtering"
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "feedparser>=6.0.11",
    "python-dotenv>=1.0.0",
    "requests>=2.31.0",
]
authors = [
    { name = "Your Name" }
]
keywords = ["monitoring", "status", "rss", "claude", "chatgpt", "openai", "anthropic"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
]

[project.scripts]
llm-monitor = "run_monitor:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["llm_monitor"]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=llm_monitor",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["llm_monitor"]
omit = ["tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
